{"version":3,"sources":["logo.svg","components/form.jsx","components/weather.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","error","props","className","role","Form","onSubmit","loadweather","type","placeholder","name","autoComplete","Weather","cityname","weatherIcon","temp_celsius","min","max","maxminTemp","temp_min","temp_max","description","charAt","toUpperCase","slice","App","getWeather","e","a","preventDefault","country","target","elements","value","city","fetch","api_call","json","response","setState","sys","main","weather","celsius","calCelsius","temp","get_WeatherIcon","id","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","this","Math","floor","src","logo","alt","width","height","href","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.05c6654c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport \"./formStyle.css\";\r\n\r\nconst Form = props => {\r\n\treturn (\r\n\t\t<div className=\"container mt-1\">\r\n\t\t\t<form onSubmit={props.loadweather}>\t\t\r\n\t\t\t\t<div>{props.error ? error() : \"\"}</div>\r\n\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t<div className=\"col-md-3 mt-3 mt-md-2\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tplaceholder=\"city\"\r\n\t\t\t\t\t\t\tname=\"city\"\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-3 mt-2 mt-md-2\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tplaceholder=\"country\"\r\n\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-3 mt-3 mt-md-2\">\r\n\t\t\t\t\t\t<button className=\"btn btn-block btn-warning\">Get Weather</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst error = props => {\r\n\treturn (\r\n\t\t<div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n\t\t\tPlease Enter City and Country...!\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport \"./weatherStyle.css\";\n\nconst Weather = props => {\n\treturn (\n\t\t<div className=\"container text-light\">\n\t\t\t<div className=\"Card\">\n\t\t\t\t<h1 className=\"text-white py-3\">{props.cityname}</h1>\n\t\t\t\t<h5 className=\"py-1 pt-2\">\n\t\t\t\t\t<i className={`wi ${props.weatherIcon} display-1`} />\n\t\t\t\t</h5>\n\n\t\t\t\t{/* Get Celsius */}\n\t\t\t\t{props.temp_celsius ? (\n\t\t\t\t\t<h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>\n\t\t\t\t) : null}\n\n\t\t\t\t{/* show max and min temp */}\n\t\t\t\t{maxminTemp(props.temp_min, props.temp_max)}\n\n\t\t\t\t{/* Weather description */}\n\t\t\t\t<h4 className=\"py-2\">\n\t\t\t\t\t{props.description.charAt(0).toUpperCase() +\n\t\t\t\t\t\tprops.description.slice(1)}\n\t\t\t\t</h4>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Weather;\n\nfunction maxminTemp(min, max) {\n\tif (max && min) {\n\t\treturn (\n\t\t\t<h3>\n\t\t\t\t<span className=\"px-4\">{min}&deg;</span>\n\t\t\t\t<span className=\"px-4\">{max}&deg;</span>\n\t\t\t</h3>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport \"weather-icons/css/weather-icons.css\";\n\nconst API_KEY = \"fca6c180d91d2d1f0a8dd3c77097c7ff\";\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcity: undefined,\n\t\t\tcountry: undefined,\n\t\t\ticon: undefined,\n\t\t\tmain: undefined,\n\t\t\tcelsius: undefined,\n\t\t\ttemp_max: null,\n\t\t\ttemp_min: null,\n\t\t\tdescription: \"\",\n\t\t\terror: false\n\t\t};\n\n\t\tthis.weatherIcon = {\n\t\t\tThunderstorm: \"wi-thunderstorm\",\n\t\t\tDrizzle: \"wi-sleet\",\n\t\t\tRain: \"wi-storm-showers\",\n\t\t\tSnow: \"wi-snow\",\n\t\t\tAtmosphere: \"wi-fog\",\n\t\t\tClear: \"wi-day-sunny\",\n\t\t\tClouds: \"wi-day-fog\"\n\t\t};\n\t}\n\n\tget_WeatherIcon(icons, rangeId) {\n\t\tswitch (true) {\n\t\t\tcase rangeId >= 200 && rangeId < 232:\n\t\t\t\tthis.setState({ icon: icons.Thunderstorm });\n\t\t\t\tbreak;\n\t\t\tcase rangeId >= 300 && rangeId <= 321:\n\t\t\t\tthis.setState({ icon: icons.Drizzle });\n\t\t\t\tbreak;\n\t\t\tcase rangeId >= 500 && rangeId <= 521:\n\t\t\t\tthis.setState({ icon: icons.Rain });\n\t\t\t\tbreak;\n\t\t\tcase rangeId >= 600 && rangeId <= 622:\n\t\t\t\tthis.setState({ icon: icons.Snow });\n\t\t\t\tbreak;\n\t\t\tcase rangeId >= 701 && rangeId <= 781:\n\t\t\t\tthis.setState({ icon: icons.Atmosphere });\n\t\t\t\tbreak;\n\t\t\tcase rangeId === 800:\n\t\t\t\tthis.setState({ icon: icons.Clear });\n\t\t\t\tbreak;\n\t\t\tcase rangeId >= 801 && rangeId <= 804:\n\t\t\t\tthis.setState({ icon: icons.Clouds });\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.setState({ icon: icons.Clouds });\n\t\t}\n\t}\n\n\tcalCelsius(temp) {\n\t\tlet cell = Math.floor(temp - 273.15);\n\t\treturn cell;\n\t}\n\n\tgetWeather = async e => {\n\t\te.preventDefault();\n\n\t\tconst country = e.target.elements.country.value;\n\t\tconst city = e.target.elements.city.value;\n\n\t\tif (country && city) {\n\t\t\tconst api_call = await fetch(\n\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}`\n\t\t\t);\n\n\t\t\tconst response = await api_call.json();\n\n\t\t\tthis.setState({\n\t\t\t\tcity: `${response.name}, ${response.sys.country}`,\n\t\t\t\tcountry: response.sys.country,\n\t\t\t\tmain: response.weather[0].main,\n\t\t\t\tcelsius: this.calCelsius(response.main.temp),\n\t\t\t\ttemp_max: this.calCelsius(response.main.temp_max),\n\t\t\t\ttemp_min: this.calCelsius(response.main.temp_min),\n\t\t\t\tdescription: response.weather[0].description,\n\t\t\t\terror: false\n\t\t\t});\n\n\t\t\t// seting icons\n\t\t\tthis.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\terror: true\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"container-fluid text-center\">\n\t\t\t\t\t<div className=\"row justify-content-center headings\">\n\t\t\t\t\t\t<div className=\"col-12 col-md-6 pt-1 text-center\">\n\t\t\t\t\t\t\t<img className=\"img-fluid App-logo\" src={logo} alt=\"logo goes here\" width=\"150\" height=\"150\" />\n\t\t\t\t\t\t\t<h2 className=\"text-light py-1\">Weather App</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Form loadweather={this.getWeather} error={this.state.error} />\n\t\t\t\t\t<Weather\n\t\t\t\t\t\tcityname={this.state.city}\n\t\t\t\t\t\tweatherIcon={this.state.icon}\n\t\t\t\t\t\ttemp_celsius={this.state.celsius}\n\t\t\t\t\t\ttemp_max={this.state.temp_max}\n\t\t\t\t\t\ttemp_min={this.state.temp_min}\n\t\t\t\t\t\tdescription={this.state.description}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<footer className=\"page-footer bg-dark fixed-bottom\">\n\t\t\t\t\t<div className=\"footer-copyright text-center text-white py-2\">Developed by\n\t\t\t\t\t\t\t<a className=\"text-white text-decoration-none\" href=\"mailto:prakashs25698@gmail.com\" ><span className=\"text-white\">&nbsp; PRAKASH S</span></a>\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}